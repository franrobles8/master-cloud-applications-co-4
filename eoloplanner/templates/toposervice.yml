apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-toposervice-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
        {{ .Release.Name }}-dns-policy: enabled
    spec:
      securityContext:
        runAsUser: 1001
      restartPolicy: Always
      containers:
      - name: {{ .Release.Name }}-toposervice
        image: {{ .Values.service.topoimage }}
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: {{ .Release.Name }}-mongodb-service
        - name: SPRING_DATA_MONGODB_PORT
          value: "27017"
        - name: SPRING_DATA_MONGODB_DATABASE
          value: topoDB
        - name: SPRING_DATA_MONGODB_AUTHENTICATION-DATABASE
          value: admin
        - name: SPRING_DATA_MONGODB_USERNAME
          value: root
        - name: SPRING_DATA_MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mongodb-secret
              key: password
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-toposervice-service
  labels:
    app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: toposervice-port
  selector:
    app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
  {{- if .Values.ingress.enabled }}
  type: ClusterIP
  {{- else }}
  type: {{ .Values.ingress.type }}
  {{- end }}
{{- if .Values.netpol.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-topo-to-mongodb
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: {{ .Values.service.mongotag | default (printf "%s-mongodb" .Release.Name) }}
    ports:
    - port: 27017
      protocol: TCP
{{- if .Values.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-topo-from-planner-ingress
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.service.plannertag | default (printf "%s-planner" .Release.Name) }}
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
{{- else }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-topo-from-nodeport
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
  ingress:
    - ports:
      - port: 8080
{{- end -}}
{{- end -}}