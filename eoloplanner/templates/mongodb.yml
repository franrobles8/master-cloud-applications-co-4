---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongodb-deploy
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Values.service.mongotag | default (printf "%s-mongodb" .Release.Name) }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Values.service.mongotag | default (printf "%s-mongodb" .Release.Name) }}
    spec:
      containers:
      - name: {{ .Release.Name }}-mongodb
        image: {{ .Values.service.mongoimage }}
        env:
        - name: MONGO_INITDB_DATABASE
          value: topoDB
        - name: MONGO_INITDB_ROOT_USERNAME
          value: root
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 27017
        - containerPort: 27018
        - containerPort: 27019
        volumeMounts:
        - mountPath: /data/db
          name: {{ .Release.Name }}-datadb
      volumes:
      - name: {{ .Release.Name }}-datadb
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mongo-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mongo-pvc
spec:
  {{- if .Values.persistentVolumes.createOnInit }} 
  storageClassName: {{ .Release.Name }}-mongo 
  {{- else }}
  storageClassName: {{ .Values.mongodb.storageClassName }}
  {{- end }}
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-mongodb-service
  labels:
    app: {{ .Values.service.mongotag | default (printf "%s-mongodb" .Release.Name) }}
spec:
  ports:
  - port: 27017
    targetPort: 27017
    protocol: TCP
    name: mongodb-port-27017
  - port: 27018
    targetPort: 27018
    protocol: TCP
    name: mongodb-port-27018
  - port: 27019
    targetPort: 27019
    protocol: TCP
    name: mongodb-port-27019
  selector:
    app: {{ .Values.service.mongotag | default (printf "%s-mongodb" .Release.Name) }}
  type: ClusterIP
{{- if .Values.netpol.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: {{ .Release.Name }}-mongodb-from-topo
spec:
  podSelector:
    matchLabels:
      app: {{ .Values.service.mongotag | default (printf "%s-mongodb" .Release.Name) }}
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: {{ .Values.service.topotag | default (printf "%s-toposervice" .Release.Name) }}
    ports:
    - port: 27017
      protocol: TCP
{{- end -}}